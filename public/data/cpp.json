[
  {
    "categoryName": "Basics",
    "snippets": [
      {
        "title": "Hello, World!",
        "description": "Prints Hello, World! to the terminal.",
        "code": [
          "#include <iostream> // Includes the input/output stream library",
          "",
          "int main() { // Defines the main function",
          "    std::cout << \"Hello, World!\" << std::endl; // Outputs Hello, World! and a newline",
          "    return 0; // indicate the program executed successfully",
          "}"
        ],
        "tags": ["cpp", "printing", "hello-world", "utility"],
        "author": "James-Beans"
      }
    ]
  },
  {
    "categoryName": "String Manipulation",
    "snippets": [
      {
        "title": "Reverse String",
        "description": "Reverses the characters in a string.",
        "code": [
          "#include <string>",
          "#include <algorithm>",
          "",
          "std::string reverseString(const std::string& input) {",
          "    std::string reversed = input;",
          "    std::reverse(reversed.begin(), reversed.end());",
          "    return reversed;",
          "}"
        ],
        "tags": ["cpp", "array", "reverse", "utility"],
        "author": "Vaibhav-kesarwani"
      },
      {
        "title": "Split String",
        "description": "Splits a string by a delimiter.",
        "code": [
          "#include <string>",
          "#include <vector>",
          "",
          "std::vector<std::string> split_string(std::string str, std::string delim) {",
          "    std::vector<std::string> splits;",
          "    int i = 0, j;",
          "    int inc = delim.length();",
          "    while (j != std::string::npos) {",
          "        j = str.find(delim, i);",
          "        splits.push_back(str.substr(i, j - i));",
          "        i = j + inc;",
          "    }",
          "    return splits;",
          "}"
        ],
        "tags": ["cpp", "string", "split", "utility"],
        "author": "saminjay"
      },
      {
        "title": "Palindrome Check",
        "description": "Checks if a given string is a palindrome (reads the same forwards and backwards).",
        "code": [
          "#include <string>",
          "",
          "// Function to check if a given string is a palindrome",
          "bool isPalindrome(const std::string& str) {",
          "    int left = 0;",
          "    int right = str.length() - 1;",
          "    ",
          "    // Compare characters from both ends",
          "    while (left < right) {",
          "        if (str[left] != str[right]) // If characters don't match, it's not a palindrome",
          "            return false;",
          "        left++;",
          "        right--;",
          "    }",
          "    return true; // If all characters match, it's a palindrome",
          "}"
        ],
        "tags": ["cpp", "string", "palindrome", "utility"],
        "author": "Arpit-Joshi"
      }
    ]
  }
]
