[
  {
    "categoryName": "Basics",
    "snippets": [
      {
        "title": "Hello, World!",
        "description": "Prints Hello, World! to the terminal.",
        "code": [
          "#include <iostream> // Includes the input/output stream library",
          "",
          "int main() { // Defines the main function",
          "    std::cout << \"Hello, World!\" << std::endl; // Outputs Hello, World! and a newline",
          "    return 0; // indicate the program executed successfully",
          "}"
        ],
        "tags": ["cpp", "printing", "hello-world", "utility"],
        "author": "James-Beans"
      }
    ]
  },
  {
    "categoryName": "String Manipulation",
    "snippets": [
      {
        "title": "Reverse String",
        "description": "Reverses the characters in a string.",
        "code": [
          "#include <string>",
          "#include <algorithm>",
          "",
          "std::string reverseString(const std::string& input) {",
          "    std::string reversed = input;",
          "    std::reverse(reversed.begin(), reversed.end());",
          "    return reversed;",
          "}"
        ],
        "tags": ["cpp", "array", "reverse", "utility"],
        "author": "Vaibhav-kesarwani"
      },
      {
        "title": "Split String",
        "description": "Splits a string by a delimiter",
        "code": [
          "#include <string>",
          "#include <vector>",
          "",
          "std::vector<std::string> split_string(std::string str, std::string delim) {",
          "    std::vector<std::string> splits;",
          "    int i = 0, j;",
          "    int inc = delim.length();",
          "    while (j != std::string::npos) {",
          "        j = str.find(delim, i);",
          "        splits.push_back(str.substr(i, j - i));",
          "        i = j + inc;",
          "    }",
          "    return splits;",
          "}"
        ],
        "tags": ["cpp", "string", "split", "utility"],
        "author": "saminjay"
      }
    ]
  },
  {
    "categoryName": "Vector Manipulation",
    "snippets": [
      {
        "title": "Remove duplicates",
        "description": "Removes duplicates from an vector of ints",
        "code": [
            "#include <algorithm>",
            "#include <vector>",
            "",
            "void removeDublicates(std::vector<int> &input) {",
            "    std::sort(input.begin(), input.end()); // sort the vector",
            "    auto last = std::unique(input.begin(), input.end());  // remove duplicates",
            "    input.erase(last, input.end());  // resize vector and delete the undefined elements",
            "}"
        ],
        "tags": ["cpp", "vector", "deduplicate", "utility"],
        "author": "AnkushRoy-code"
      },
      {
        "title": "Remove duplicates",
        "description": "Remove elements that occur n number of times in a vector",
        "code": [
            "#include <vector>",
            "#include <unordered_map>",
            "#include <algorithm>",
            "",
            "void removeOccurrences(std::vector<int>& vec, int n) {",
            "   std::unordered_map<int, int> frequency; // count frequencies",
            "   for (int num : vec) {",
            "       frequency[num]++;",
            "   }",
            "",
            "   vec.erase( // remove elements with n number of occurrences",
            "       std::remove_if(vec.begin(), vec.end(), [&](int x) {",
            "           return frequency[x] == n;",
            "       }),",
            "       vec.end()",
            "   );",
            "}"
        ],
        "tags": ["cpp", "vector", "utility"],
        "author": "AnkushRoy-code"
      }
    ]
  }
]
